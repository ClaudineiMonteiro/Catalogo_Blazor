@using W8lessLabs.Blazor.LocalFiles

<div>
    <label>@Titulo</label><br />
    @if (ImagemBase64 != null)
    {
        <img class="rounded" src="data:image/jpeg;base64, @ImagemBase64" style="width:200px;" />
    }

    <div class="d-flex mt-2" style="width:200px">
        <button type="button" class="btn btn-primary btn-sm w-50 mr-2" @onclick="SelecionarImagem">Selecionar</button>
        <button type="button" class="btn btn-danger btn-sm w-50" @onclick="@(()=> OnExcluirImagem.InvokeAsync())">Excluir</button>
    </div>

    <FileSelect @ref="fileSelect" Accept=".jpg,.jpeg,.png" FilesSelected="FilesSelectedHandler"></FileSelect>

</div>


@code {


    [Parameter] public string Titulo { get; set; } = "Imagem";

    [Parameter] public string ImagemBase64 { get; set; }

    [Parameter] public EventCallback<string> OnSelecionarImagem { get; set; }

    [Parameter] public EventCallback OnExcluirImagem { get; set; }


    private FileSelect fileSelect;


    private void SelecionarImagem()
    {
        fileSelect.SelectFiles();
    }

    async Task FilesSelectedHandler(SelectedFile[] selectedFiles)
    {
        var selectedFile = selectedFiles[0];
        var fileBytes = await fileSelect.GetFileBytesAsync(selectedFile.Name);
        var imagemBase64 = Convert.ToBase64String(fileBytes);
        await OnSelecionarImagem.InvokeAsync(imagemBase64);
    }
}